<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DEBUGGIFY]]></title>
  <link href="http://debuggify.github.com/atom.xml" rel="self"/>
  <link href="http://debuggify.github.com/"/>
  <updated>2013-01-10T04:05:08+05:30</updated>
  <id>http://debuggify.github.com/</id>
  <author>
    <name><![CDATA[Debuggify]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Window.onerror is not enough]]></title>
    <link href="http://debuggify.github.com/blog/2012/11/26/window-dot-onerror-is-not-enough/"/>
    <updated>2012-11-26T13:18:00+05:30</updated>
    <id>http://debuggify.github.com/blog/2012/11/26/window-dot-onerror-is-not-enough</id>
    <content type="html"><![CDATA[<p>Scott Hanselman blogged about <a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">JavaScript the assembly language for the web</a>. There a plenty of <a href="https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS">languages that compiles to javascript</a>. With the addition of Dart from Google and Typescript from Microsoft a war has broke out for better.</p>

<p>With the rise of compiled to javascript languages it hard to traceback the errors to original source. Almost all modern provides the window.onerror api to catch all uncaught exceptions on a page. This api provides very limited information (error message, filename and line number only) which is the root cause of many problems.</p>

<p>With modern web development practices the amount of javascript code per page is growing rapidly. Also this code is minified by the minification tools(like <a href="https://developers.google.com/closure/compiler/">Google Closure Compiler</a>,  <a href="https://github.com/mishoo/UglifyJS2">UglifyJS2</a> etc) to reduce the code size. After minification whole code ends in one single line. Here is where most problem starts. I am listing some really annoying issues related to window.onerror below</p>

<ul>
<li><p>Missing Char No: The char no is very important for the minified code to point at the exact statement as there is only one line in minified code. Even source maps cannot be helpful in tracking back to original line.</p></li>
<li><p>No Call Stack: The call stack is completely hidden from the developer so its hard to identify the functions flow. However there is a trick to <a href="http://blog.errorception.com/2011/12/call-stacks-in-ie.html">extract stack in IE9</a> only.</p></li>
<li><p>Cross Origin Errors: These types are thown when some cross origin permission is broken. They are very common on pages with facebook like and google plus widget installed. For such errors window.error message throw a single message &#8220;Script Error&#8221;. As per <a href="http://stackoverflow.com/questions/5913978/cryptic-script-error-reported-in-javascript-n-chrome-and-firefox/7778424#7778424">stackoverflow</a> post this behavior is intentional to avoid some security risks but its at expense of useful debugging information.</p></li>
</ul>


<p>Most of above mentioned problems are roadblock in debugging production websites / applications. There is a need for better tools and libraries for the job.</p>

<p>I will soon be writing a post on <strong>Best Debugging Practices For Javascript In Production Environment</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Debuggify?]]></title>
    <link href="http://debuggify.github.com/blog/2012/08/07/why-debuggify/"/>
    <updated>2012-08-07T12:10:00+05:30</updated>
    <id>http://debuggify.github.com/blog/2012/08/07/why-debuggify</id>
    <content type="html"><![CDATA[<h2>Who am I?</h2>

<p>I was born 6 years back when I bought my first computer and a internet connection. To be frank, Internet is a second home to me. For most of people out there who feel same, are continuously trying to make <strong>Internet a better place</strong>.</p>

<p>I am also a computer science engineering grad, so I am surrounded by technology. In order to feed my engineering inquisitiveness I have explored the black, white and gray sections of the internet.</p>

<h2>Where it all started?</h2>

<p>I am a full stack web developer by profession and have authored / co-authored many 3rd party social plugins for <a href="http://www.shareaholic.com/publishers">Shareaholic Inc</a> which runs on thousands of different blogs and websites driving 1+ billion pageviews per month. These plugins can be installed on different CMS/blogging platform like Wordpress, Drupal, Tumblr, Blogger etc. While working on these plugins I closely interact with the different elements of the modern internet ecosystem.</p>

<h2>What&#8217;s my use case of 3rd party plugin ?</h2>

<blockquote><p>A 3rd party plugin has to be <strong>robust</strong> enough to work in <strong>3rd party environments</strong> while interacting with <strong>3rd party apis</strong> and support every <strong>major browser vendor</strong> out there</p></blockquote>

<p>Elaborating the above quote</p>

<ul>
<li>As plugins runs on 3rd party websites, it has to be robust so it <code>doesn't break</code> itself and neither the website</li>
<li>It has to be fast enough to deliver <code>good page load time</code></li>
<li>It should <code>not conflict</code> with other existing plugins</li>
<li>It should <code>support major browser vendors</code> including internet explorer</li>
<li>It should also <code>support legacy browser versions</code> like ie6 ie7 etc.</li>
<li>As plugins interact with over 200+ 3rd party apis, it&#8217;s hard to keep track when something break</li>
<li>It should be easy to setup with multiple cms/blogging environments for better distribution</li>
</ul>


<h2>Technical challenges faced ?</h2>

<ul>
<li>In 3rd party environment, developers have limited or no control over things, so it&#8217;s hard to debug and reproduce bugs / issues</li>
<li>If some plugin feature is not working its hard to know whether

<ul>
<li>it&#8217;s not working for a particular website,</li>
<li>or not working for a set of URLs</li>
<li>or for a particular CMS/Blogging environment</li>
<li>or for a particular screen resolution</li>
<li>or for a particular browser vendor</li>
<li>or even for a particular version of a browser vendor</li>
<li>or for all cases</li>
</ul>
</li>
<li>Its hard to judge the impact of every release, whether it fixed the problem or introduced some new side effects</li>
<li>The 3rd party API&#8217;s are continuously changing, upgrading &amp; depreciating.  Companies like Facebook, Google, Twitter are continuously bashing developers with bleeding edges of their API&#8217;s</li>
<li>With HTML5, ES Harmony and CSS3,  browsers are evolving faster than ever, so they are also releasing bleeding edge features and API&#8217;s</li>
</ul>


<h2>Who else is facing problems?</h2>

<p>As all wise developers know</p>

<blockquote><p> Zero Bugs is a Myth</p></blockquote>

<p>I have talked to a few friends about the problems. All are encountering similar set of problems on the daily basic. A majority their development time is spend in debugging and fixing bugs. The debugging is also becoming hard due to the evolving nature of the web.</p>

<h2>What to do about it?</h2>

<p>So I finally decided to go on a quest to make <strong>Internet a better place for developers</strong>.</p>

<h2>Why Developers ?</h2>

<blockquote><p>Developers are the keepers of the modern internet.</p></blockquote>

<p>The web is evolving because of the developers. There are around 1+ million developers on the planet. I can build something that make developers more productive and can save up to 1hr/day of their time, it&#8217;s going to be revolutionary. Developers can reinvest this time in open source projects, new innovations or anything that eventually make <strong>Internet a better place</strong></p>

<p>So that is Debuggify is all about. Contact me if you want to join me on my quest.</p>
]]></content>
  </entry>
  
</feed>
