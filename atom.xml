<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DEBUGGIFY]]></title>
  <link href="http://debuggify.github.com/atom.xml" rel="self"/>
  <link href="http://debuggify.github.com/"/>
  <updated>2013-06-30T12:50:27+05:30</updated>
  <id>http://debuggify.github.com/</id>
  <author>
    <name><![CDATA[Debuggify]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install phpmyadmin behind nginx on ubuntu 12.04 LTS]]></title>
    <link href="http://debuggify.github.com/blog/2013/06/30/install-phpmyadmin-behind-nginx-on-ubuntu-12-dot-04-lts/"/>
    <updated>2013-06-30T12:40:00+05:30</updated>
    <id>http://debuggify.github.com/blog/2013/06/30/install-phpmyadmin-behind-nginx-on-ubuntu-12-dot-04-lts</id>
    <content type="html"><![CDATA[<h2>Setup dependencies</h2>

<p>Setup Php, mysql &amp; phpmyadmin:</p>

<pre><code>  sudo apt-get install php5-fpm php-apc mysql-server mysql-client phpmyadmin nginx
</code></pre>

<p>Enter your MySQL password and phpmyadmin webinterface password when prompted</p>

<p>Enable mysql extension by editing /etc/php5/fpm/php.ini</p>

<pre><code>sudo vim /etc/php5/fpm/php.ini
</code></pre>

<p>Add the following line and save</p>

<pre><code>extension=mysql.so
</code></pre>

<p>Restart to use new config</p>

<pre><code>  sudo /etc/init.d/php5-fpm restart
  sudo /etc/init.d/nginx restart
</code></pre>

<h2>Setup Nginx config:</h2>

<p>Next create a basic nginx vhost configuration in /etc/nginx/sites-available/ directory as follows:</p>

<pre><code>sudo vim /etc/nginx/sites-available/phpmyadmin
</code></pre>

<p>And add the following:</p>

<pre><code>server {

       listen 80;
       server_name admin.lvh.me lvh.me;
       root /var/www/phpmyadmin;
       if ($http_host != "admin.lvh.me") {
                 rewrite ^ http://admin.lvh.me$request_uri permanent;
       }
       index index.php index.html;
       location = /favicon.ico {
                log_not_found off;
                access_log off;
       }
       location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
       }
       # Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
        location ~* \.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$|\.php_ {
                deny all;
        }
       # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
       location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
       }
       location ~*  \.(jpg|jpeg|png|gif|css|js|ico)$ {
                expires max;
                log_not_found off;
       }
       location ~ \.php$ {
                try_files $uri =404;
                include /etc/nginx/fastcgi_params;
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
       }

       location /phpmyadmin {
               root /usr/share/;
               index index.php index.html index.htm;
               location ~ ^/phpmyadmin/(.+\.php)$ {
                       try_files $uri =404;
                       root /usr/share/;
                       fastcgi_pass 127.0.0.1:9000;
                       fastcgi_index index.php;
                       fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                       include /etc/nginx/fastcgi_params;
               }
               location ~* ^/phpmyadmin/(.+\.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt))$ {
                       root /usr/share/;
               }
        }
        location /phpMyAdmin {
               rewrite ^/* /phpmyadmin last;
        }
}
</code></pre>

<p>To enable that vhost, we create a symlink to it from the /etc/nginx/sites-enabled/ directory:</p>

<pre><code>cd /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/phpmyadmin phpmyadmin
</code></pre>

<p>Reload nginx for the new configuration to take effect:</p>

<pre><code>sudo /etc/init.d/nginx reload
</code></pre>

<p>Open the link in the browser <a href="http://admin.lvh.me/phpmyadmin">http://admin.lvh.me/phpmyadmin</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Error in Javascript Comments]]></title>
    <link href="http://debuggify.github.com/blog/2013/06/22/error-in-javascript-comments/"/>
    <updated>2013-06-22T08:12:00+05:30</updated>
    <id>http://debuggify.github.com/blog/2013/06/22/error-in-javascript-comments</id>
    <content type="html"><![CDATA[<p>Last week, I was writing code in javascript  when I found something that completly blew off my mind. This is what I found</p>

<p><img src="http://debuggify.github.com/images/posts/stupid_ie.png" alt="Stupid IE" /></p>

<p>Yeah, IE thowing error in javascript comment. For some time I didnot believe what I am seeing, but gradually I came to my senses. Like most developers, first thing I did was started cursing IE on twitter, but later reality struct me and that is to find a solution to this mess.</p>

<p>I dig in a lot of wrong places until I found <a href="http://en.wikipedia.org/wiki/Conditional_comment">conditional comments</a> in IE. A sample of how the conditional logic works is below</p>

<pre><code>&lt;script&gt;
/*@cc_on

  @if (@_jscript_version == 10)
    document.write("You are using IE10");

  @elif (@_jscript_version == 9)
    document.write("You are using IE9");

  @elif (@_jscript_version == 5.8)
    document.write("You are using IE8");

  @elif (@_jscript_version == 5.7 &amp;&amp; window.XMLHttpRequest)
    document.write("You are using IE7");

  @elif (@_jscript_version == 5.6 || (@_jscript_version == 5.7 &amp;&amp; !window.XMLHttpRequest))
    document.write("You are using IE6");

  @elif (@_jscript_version == 5.5)
    document.write("You are using IE5.5");

  @else
    document.write("You are using IE5 or older");

  @end

@*/
&lt;/script&gt;
</code></pre>

<p>To fix this all I need to do is to remove the whole comment. This comment is anyways useful for sourcemaps supported browsers which is long way to go for IE.</p>

<p>Anyways this is just a hack for the time being. The <a href="https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit">sourcemap specs</a> has been updated due to this problem. To know more check the <a href="https://github.com/mishoo/UglifyJS2/pull/213">uglifyjs issue on github</a></p>

<p>Finally all I have to say is <code>God Bless IE Developers</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debug Javscript In Production]]></title>
    <link href="http://debuggify.github.com/blog/2013/03/31/debug-javascript-in-production/"/>
    <updated>2013-03-31T17:39:00+05:30</updated>
    <id>http://debuggify.github.com/blog/2013/03/31/debug-javascript-in-production</id>
    <content type="html"><![CDATA[<p>Today I had great time sharing my experience on javascript debugging with the <a href="http://www.meetup.com/JavaScript-Ninjas-Bangalore/">javascript ninja community</a> at Bangalore</p>

<p>Here is the presentation</p>

<script async class="speakerdeck-embed" data-id="fc67d7b07c8701300a45123138156341" data-ratio="1.33333333333333" src="http://debuggify.github.com//speakerdeck.com/assets/embed.js"></script>




<br/>


<p>I will be explaining each point in details in the future posts.</p>

<p>I know I have abandoned the blog for long time but not any more. Stay connected for more.</p>

<p>Happy Debugging !!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Window.onerror is not enough]]></title>
    <link href="http://debuggify.github.com/blog/2012/11/26/window-dot-onerror-is-not-enough/"/>
    <updated>2012-11-26T13:18:00+05:30</updated>
    <id>http://debuggify.github.com/blog/2012/11/26/window-dot-onerror-is-not-enough</id>
    <content type="html"><![CDATA[<p>Scott Hanselman blogged about <a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">JavaScript the assembly language for the web</a>. There a plenty of <a href="https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS">languages that compiles to javascript</a>. With the addition of Dart from Google and Typescript from Microsoft a war has broke out for better.</p>

<p>With the rise of compiled to javascript languages it hard to traceback the errors to original source. Almost all modern provides the window.onerror api to catch all uncaught exceptions on a page. This api provides very limited information (error message, filename and line number only) which is the root cause of many problems.</p>

<p>With modern web development practices the amount of javascript code per page is growing rapidly. Also this code is minified by the minification tools(like <a href="https://developers.google.com/closure/compiler/">Google Closure Compiler</a>,  <a href="https://github.com/mishoo/UglifyJS2">UglifyJS2</a> etc) to reduce the code size. After minification whole code ends in one single line. Here is where most problem starts. I am listing some really annoying issues related to window.onerror below</p>

<ul>
<li><p>Missing Char No: The char no is very important for the minified code to point at the exact statement as there is only one line in minified code. Even source maps cannot be helpful in tracking back to original line.</p></li>
<li><p>No Call Stack: The call stack is completely hidden from the developer so its hard to identify the functions flow. However there is a trick to <a href="http://blog.errorception.com/2011/12/call-stacks-in-ie.html">extract stack in IE9</a> only.</p></li>
<li><p>Cross Origin Errors: These types are thown when some cross origin permission is broken. They are very common on pages with facebook like and google plus widget installed. For such errors window.error message throw a single message &#8220;Script Error&#8221;. As per <a href="http://stackoverflow.com/questions/5913978/cryptic-script-error-reported-in-javascript-n-chrome-and-firefox/7778424#7778424">stackoverflow</a> post this behavior is intentional to avoid some security risks but its at expense of useful debugging information.</p></li>
</ul>


<p>Most of above mentioned problems are roadblock in debugging production websites / applications. There is a need for better tools and libraries for the job.</p>

<p>I will soon be writing a post on <strong>Best Debugging Practices For Javascript In Production Environment</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Debuggify?]]></title>
    <link href="http://debuggify.github.com/blog/2012/08/07/why-debuggify/"/>
    <updated>2012-08-07T12:10:00+05:30</updated>
    <id>http://debuggify.github.com/blog/2012/08/07/why-debuggify</id>
    <content type="html"><![CDATA[<h2>Who am I?</h2>

<p>I was born 6 years back when I bought my first computer and a internet connection. To be frank, Internet is a second home to me. For most of people out there who feel same, are continuously trying to make <strong>Internet a better place</strong>.</p>

<p>I am also a computer science engineering grad, so I am surrounded by technology. In order to feed my engineering inquisitiveness I have explored the black, white and gray sections of the internet.</p>

<h2>Where it all started?</h2>

<p>I am a full stack web developer by profession and have authored / co-authored many 3rd party social plugins for <a href="http://www.shareaholic.com/publishers">Shareaholic Inc</a> which runs on thousands of different blogs and websites driving 1+ billion pageviews per month. These plugins can be installed on different CMS/blogging platform like Wordpress, Drupal, Tumblr, Blogger etc. While working on these plugins I closely interact with the different elements of the modern internet ecosystem.</p>

<h2>What&#8217;s my use case of 3rd party plugin ?</h2>

<blockquote><p>A 3rd party plugin has to be <strong>robust</strong> enough to work in <strong>3rd party environments</strong> while interacting with <strong>3rd party apis</strong> and support every <strong>major browser vendor</strong> out there</p></blockquote>

<p>Elaborating the above quote</p>

<ul>
<li>As plugins runs on 3rd party websites, it has to be robust so it <code>doesn't break</code> itself and neither the website</li>
<li>It has to be fast enough to deliver <code>good page load time</code></li>
<li>It should <code>not conflict</code> with other existing plugins</li>
<li>It should <code>support major browser vendors</code> including internet explorer</li>
<li>It should also <code>support legacy browser versions</code> like ie6 ie7 etc.</li>
<li>As plugins interact with over 200+ 3rd party apis, it&#8217;s hard to keep track when something break</li>
<li>It should be easy to setup with multiple cms/blogging environments for better distribution</li>
</ul>


<h2>Technical challenges faced ?</h2>

<ul>
<li>In 3rd party environment, developers have limited or no control over things, so it&#8217;s hard to debug and reproduce bugs / issues</li>
<li>If some plugin feature is not working its hard to know whether

<ul>
<li>it&#8217;s not working for a particular website,</li>
<li>or not working for a set of URLs</li>
<li>or for a particular CMS/Blogging environment</li>
<li>or for a particular screen resolution</li>
<li>or for a particular browser vendor</li>
<li>or even for a particular version of a browser vendor</li>
<li>or for all cases</li>
</ul>
</li>
<li>Its hard to judge the impact of every release, whether it fixed the problem or introduced some new side effects</li>
<li>The 3rd party API&#8217;s are continuously changing, upgrading &amp; depreciating.  Companies like Facebook, Google, Twitter are continuously bashing developers with bleeding edges of their API&#8217;s</li>
<li>With HTML5, ES Harmony and CSS3,  browsers are evolving faster than ever, so they are also releasing bleeding edge features and API&#8217;s</li>
</ul>


<h2>Who else is facing problems?</h2>

<p>As all wise developers know</p>

<blockquote><p> Zero Bugs is a Myth</p></blockquote>

<p>I have talked to a few friends about the problems. All are encountering similar set of problems on the daily basic. A majority their development time is spend in debugging and fixing bugs. The debugging is also becoming hard due to the evolving nature of the web.</p>

<h2>What to do about it?</h2>

<p>So I finally decided to go on a quest to make <strong>Internet a better place for developers</strong>.</p>

<h2>Why Developers ?</h2>

<blockquote><p>Developers are the keepers of the modern internet.</p></blockquote>

<p>The web is evolving because of the developers. There are around 1+ million developers on the planet. I can build something that make developers more productive and can save up to 1hr/day of their time, it&#8217;s going to be revolutionary. Developers can reinvest this time in open source projects, new innovations or anything that eventually make <strong>Internet a better place</strong></p>

<p>So that is Debuggify is all about. Contact me if you want to join me on my quest.</p>
]]></content>
  </entry>
  
</feed>
