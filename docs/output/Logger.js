Ext.data.JsonP.Logger({"tagname":"class","name":"Logger","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Logger","members":{"cfg":[],"property":[],"method":[{"name":"constructor","tagname":"method","owner":"Logger","meta":{},"id":"method-constructor"},{"name":"addModule","tagname":"method","owner":"Logger","meta":{},"id":"method-addModule"},{"name":"addTransport","tagname":"method","owner":"Logger","meta":{},"id":"method-addTransport"},{"name":"checkForBoolean","tagname":"method","owner":"Logger","meta":{},"id":"method-checkForBoolean"},{"name":"extendEnvironments","tagname":"method","owner":"Logger","meta":{},"id":"method-extendEnvironments"},{"name":"genericMessage","tagname":"method","owner":"Logger","meta":{},"id":"method-genericMessage"},{"name":"get","tagname":"method","owner":"Logger","meta":{},"id":"method-get"},{"name":"getAllEnvironments","tagname":"method","owner":"Logger","meta":{},"id":"method-getAllEnvironments"},{"name":"getByNamespace","tagname":"method","owner":"Logger","meta":{},"id":"method-getByNamespace"},{"name":"getFileInfo","tagname":"method","owner":"Logger","meta":{},"id":"method-getFileInfo"},{"name":"getFirstDefinedValue","tagname":"method","owner":"Logger","meta":{},"id":"method-getFirstDefinedValue"},{"name":"getFunc","tagname":"method","owner":"Logger","meta":{},"id":"method-getFunc"},{"name":"getProject","tagname":"method","owner":"Logger","meta":{},"id":"method-getProject"},{"name":"initialize","tagname":"method","owner":"Logger","meta":{},"id":"method-initialize"},{"name":"installFlags","tagname":"method","owner":"Logger","meta":{},"id":"method-installFlags"},{"name":"installFunctions","tagname":"method","owner":"Logger","meta":{},"id":"method-installFunctions"},{"name":"installTransports","tagname":"method","owner":"Logger","meta":{},"id":"method-installTransports"},{"name":"installUrlOptions","tagname":"method","owner":"Logger","meta":{},"id":"method-installUrlOptions"},{"name":"message","tagname":"method","owner":"Logger","meta":{},"id":"method-message"},{"name":"project","tagname":"method","owner":"Logger","meta":{},"id":"method-project"},{"name":"registerForErrors","tagname":"method","owner":"Logger","meta":{},"id":"method-registerForErrors"},{"name":"sendToCollector","tagname":"method","owner":"Logger","meta":{},"id":"method-sendToCollector"},{"name":"setEnv","tagname":"method","owner":"Logger","meta":{},"id":"method-setEnv"},{"name":"setFlag","tagname":"method","owner":"Logger","meta":{},"id":"method-setFlag"},{"name":"setLevel","tagname":"method","owner":"Logger","meta":{},"id":"method-setLevel"},{"name":"setNamespace","tagname":"method","owner":"Logger","meta":{},"id":"method-setNamespace"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":45,"files":[{"filename":"debuggify.logger.js","href":null}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='doc-contents'><p>Logger Class</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><strong class='new-keyword'>new</strong><a href='#!/api/Logger-method-constructor' class='name expandable'>Logger</a>( <span class='pre'>name, environments, options</span> ) : <a href=\"#!/api/Logger\" rel=\"Logger\" class=\"docClass\">Logger</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>Name of logger object</p>\n</div></li><li><span class='pre'>environments</span> : Object<div class='sub-desc'><p>All different type of enviroments and their settings</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>options that override the different configurations</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Logger\" rel=\"Logger\" class=\"docClass\">Logger</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addModule' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-addModule' class='name expandable'>addModule</a>( <span class='pre'>name, environments, parent</span> ) : Object</div><div class='description'><div class='short'>Create a new logger object wrt current object ...</div><div class='long'><p>Create a new logger object wrt current object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>Name of logger object</p>\n</div></li><li><span class='pre'>environments</span> : Object<div class='sub-desc'><p>All different type of environments</p>\n</div></li><li><span class='pre'>parent</span> : Object<div class='sub-desc'><p>parent for the logger object to be created</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A new generated logger object if everything goes fine, else false</p>\n</div></li></ul></div></div></div><div id='method-addTransport' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-addTransport' class='name expandable'>addTransport</a>( <span class='pre'>transportName, options</span> )</div><div class='description'><div class='short'>Add the transport for project ...</div><div class='long'><p>Add the transport for project</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transportName</span> : string<div class='sub-desc'><p>Name of the transport</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Options required for the transport</p>\n</div></li></ul></div></div></div><div id='method-checkForBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-checkForBoolean' class='name expandable'>checkForBoolean</a>( <span class='pre'>obj</span> ) : [type]</div><div class='description'><div class='short'>convert string to boolean vales ...</div><div class='long'><p>convert string to boolean vales</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : [type]<div class='sub-desc'><p>which need conversion</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>[type]</span><div class='sub-desc'><p>return modified object</p>\n</div></li></ul></div></div></div><div id='method-extendEnvironments' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-extendEnvironments' class='name expandable'>extendEnvironments</a>( <span class='pre'>environments, returnEmpty</span> ) : Object</div><div class='description'><div class='short'>Generate configurations for different environments using defaults ...</div><div class='long'><p>Generate configurations for different environments using defaults</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>environments</span> : Object<div class='sub-desc'><p>take different types of environments</p>\n</div></li><li><span class='pre'>returnEmpty</span> : Boolean<div class='sub-desc'><p>flag which tells return false or defaults when enviroment passed is empty or not defined</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>returned the extended environments</p>\n</div></li></ul></div></div></div><div id='method-genericMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-genericMessage' class='name expandable'>genericMessage</a>( <span class='pre'>messageArray, mtype</span> ) : [type]</div><div class='description'><div class='short'>Generate message on the basis of certain parameter ...</div><div class='long'><p>Generate message on the basis of certain parameter</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>messageArray</span> : Array<div class='sub-desc'><p>Array of data to be send in the message</p>\n</div></li><li><span class='pre'>mtype</span> : string<div class='sub-desc'><p>type of message</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>[type]</span><div class='sub-desc'><p>composed message  from various details</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-get' class='name expandable'>get</a>( <span class='pre'>name, createNew</span> ) : Object</div><div class='description'><div class='short'>return the logger if already exist else create one and return ...</div><div class='long'><p>return the logger if already exist else create one and return</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>Name of logger object</p>\n</div></li><li><span class='pre'>createNew</span> : Boolean<div class='sub-desc'><p>if false then new logger object will not be created, default true</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A new generated logger object</p>\n</div></li></ul></div></div></div><div id='method-getAllEnvironments' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-getAllEnvironments' class='name expandable'>getAllEnvironments</a>( <span class='pre'>key</span> ) : Object</div><div class='description'><div class='short'>Get the settings from all different loaded environments ...</div><div class='long'><p>Get the settings from all different loaded environments</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>the module / utility for which settings is required</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the environments objects containing only the settings related to key</p>\n</div></li></ul></div></div></div><div id='method-getByNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-getByNamespace' class='name expandable'>getByNamespace</a>( <span class='pre'>namespace</span> ) : [type]</div><div class='description'><div class='short'>Get logger object by namespace ...</div><div class='long'><p>Get logger object by namespace</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespace</span> : string<div class='sub-desc'><p>the namespace for which logger object is required</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>[type]</span><div class='sub-desc'><p>return the object if found else return false</p>\n</div></li></ul></div></div></div><div id='method-getFileInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-getFileInfo' class='name expandable'>getFileInfo</a>( <span class='pre'>frame</span> ) : Object</div><div class='description'><div class='short'>Extract the file info from the stack frame ...</div><div class='long'><p>Extract the file info from the stack frame</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frame</span> : string<div class='sub-desc'><p>one frame of a stack</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>file information object</p>\n</div></li></ul></div></div></div><div id='method-getFirstDefinedValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-getFirstDefinedValue' class='name expandable'>getFirstDefinedValue</a>( <span class='pre'></span> ) : Object</div><div class='description'><div class='short'>Return the first not undefined values from the list of values ...</div><div class='long'><p>Return the first not undefined values from the list of values</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getFunc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-getFunc' class='name expandable'>getFunc</a>( <span class='pre'>mtype, options</span> ) : function</div><div class='description'><div class='short'>Generate dynamic function based on the options ...</div><div class='long'><p>Generate dynamic function based on the options</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mtype</span> : string<div class='sub-desc'><p>type of function</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>other details required to generate the function</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>function</span><div class='sub-desc'><p>return the generated function</p>\n</div></li></ul></div></div></div><div id='method-getProject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-getProject' class='name expandable'>getProject</a>( <span class='pre'>name, createNew</span> ) : Object</div><div class='description'><div class='short'>Get the project logger by name, if doesn't exist then create a new and return ...</div><div class='long'><p>Get the project logger by name, if doesn't exist then create a new and return</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>Name of the project</p>\n</div></li><li><span class='pre'>createNew</span> : Boolean<div class='sub-desc'><p>if false then new logger object will not be created, default true</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Return logger object for give project name if it exist else create one and return</p>\n</div></li></ul></div></div></div><div id='method-initialize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-initialize' class='name expandable'>initialize</a>( <span class='pre'>name, environments, options</span> )</div><div class='description'><div class='short'>Constructor for the Logger Object ...</div><div class='long'><p>Constructor for the Logger Object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>Name of logger object</p>\n</div></li><li><span class='pre'>environments</span> : Object<div class='sub-desc'><p>All different type of environments</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>options that override the different configurations</p>\n</div></li></ul></div></div></div><div id='method-installFlags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-installFlags' class='name expandable'>installFlags</a>( <span class='pre'>context, options</span> )</div><div class='description'><div class='short'>Install flags which keep track of different message types ...</div><div class='long'><p>Install flags which keep track of different message types</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object<div class='sub-desc'><p>the object on which the functions are to installed</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>details need to decide which functions to install</p>\n</div></li></ul></div></div></div><div id='method-installFunctions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-installFunctions' class='name expandable'>installFunctions</a>( <span class='pre'>context, options</span> ) : Object</div><div class='description'><div class='short'>Generate and install dynamic function for different message types ...</div><div class='long'><p>Generate and install dynamic function for different message types</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object<div class='sub-desc'><p>the object on which the functions are to installed</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>details need to decide which functions to install</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the extended context object</p>\n</div></li></ul></div></div></div><div id='method-installTransports' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-installTransports' class='name expandable'>installTransports</a>( <span class='pre'>project</span> )</div><div class='description'><div class='short'>Install the transport for project ...</div><div class='long'><p>Install the transport for project</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>project</span> : project<div class='sub-desc'><p>The project object in which the transports are to installed</p>\n</div></li></ul></div></div></div><div id='method-installUrlOptions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-installUrlOptions' class='name expandable'>installUrlOptions</a>( <span class='pre'>context</span> )</div><div class='description'><div class='short'>Provide a way to control the values from url parameters ...</div><div class='long'><p>Provide a way to control the values from url parameters</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object<div class='sub-desc'><p>the object on which url control is to applied</p>\n</div></li></ul></div></div></div><div id='method-message' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-message' class='name expandable'>message</a>( <span class='pre'>message, moduleName, mtype</span> )</div><div class='description'><div class='short'>A generic way to send message of any specific type ...</div><div class='long'><p>A generic way to send message of any specific type</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : Object<div class='sub-desc'><p>message to send ex: 'dummy message'</p>\n</div></li><li><span class='pre'>moduleName</span> : string<div class='sub-desc'><p>Name of module ex: 'foo', 'bar'</p>\n</div></li><li><span class='pre'>mtype</span> : string<div class='sub-desc'><p>type of message ex: 'log', 'error', 'warn' etc</p>\n</div></li></ul></div></div></div><div id='method-project' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-project' class='name expandable'>project</a>( <span class='pre'>name, environments</span> ) : Object</div><div class='description'><div class='short'>Create root logger object for the whole project ...</div><div class='long'><p>Create root logger object for the whole project</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>Name of the project</p>\n</div></li><li><span class='pre'>environments</span> : Object<div class='sub-desc'><p>environments for the project</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>return the logger object</p>\n</div></li></ul></div></div></div><div id='method-registerForErrors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-registerForErrors' class='name expandable'>registerForErrors</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Register to Listen via  window.onerror for any errors ...</div><div class='long'><p>Register to Listen via  window.onerror for any errors</p>\n</div></div></div><div id='method-sendToCollector' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-sendToCollector' class='name expandable'>sendToCollector</a>( <span class='pre'>data</span> )</div><div class='description'><div class='short'>Send a message to collector object ...</div><div class='long'><p>Send a message to collector object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Array<div class='sub-desc'><p>Array of arguments to be send to collector</p>\n</div></li></ul></div></div></div><div id='method-setEnv' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-setEnv' class='name expandable'>setEnv</a>( <span class='pre'>environmentName</span> )</div><div class='description'><div class='short'>set the current environment\n@function ...</div><div class='long'><p>set the current environment\n@function</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>environmentName</span> : [type]<div class='sub-desc'><p>Name of the environment</p>\n</div></li></ul></div></div></div><div id='method-setFlag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-setFlag' class='name expandable'>setFlag</a>( <span class='pre'>mtype, value</span> ) : Boolean</div><div class='description'><div class='short'>Set the flags ...</div><div class='long'><p>Set the flags</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mtype</span> : 'string'<div class='sub-desc'><p>type of message</p>\n</div></li><li><span class='pre'>value</span> : Boolean<div class='sub-desc'><p>value of flag</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if success else false</p>\n</div></li></ul></div></div></div><div id='method-setLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-setLevel' class='name expandable'>setLevel</a>( <span class='pre'>level</span> ) : Boolean</div><div class='description'><div class='short'>Set the level of messages that should be logged\nTRACE: 0,\nINFO: 1,\nWARN: 2,\nERROR: 3,\nSILENT: 4 ...</div><div class='long'><p>Set the level of messages that should be logged\nTRACE: 0,\nINFO: 1,\nWARN: 2,\nERROR: 3,\nSILENT: 4</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>level</span> : number<div class='sub-desc'><p>message level</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false on failure</p>\n</div></li></ul></div></div></div><div id='method-setNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Logger'>Logger</span><br/></div><a href='#!/api/Logger-method-setNamespace' class='name expandable'>setNamespace</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Automatic set the namespace ...</div><div class='long'><p>Automatic set the namespace</p>\n</div></div></div></div></div></div></div>"});