Ext.data.JsonP.simple({"guide":"<h1>Basic Techniques</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/simple-section-1'>window.onerror</a></li>\n<li><a href='#!/guide/simple-section-2'>Client Side Logging</a></li>\n<li><a href='#!/guide/simple-section-3'>Custom Events</a></li>\n<li><a href='#!/guide/simple-section-4'>Modular Logging</a></li>\n</ol>\n</div>\n\n<h2 id='simple-section-1'>window.onerror</h2>\n\n<p>After the adding the code snipet, it automatically start tracking of all errors using <strong>window.onerror</strong> listener. You will access these errors from Debuggify Dashboard</p>\n\n<p>But we can do a lot more than that.</p>\n\n<h2 id='simple-section-2'>Client Side Logging</h2>\n\n<p>Just like server side logging we can do client side logging. All the logs will be collected and accessible from Debuggify Dashboard</p>\n\n<p>Let start by creating a logger for whole project</p>\n\n<pre><code>// Create a logger object\nvar project1 = debuggify.Logger.get('project1');\n\n// Use similar to console object\nproject1.log('Yay! I can log');\nproject1.warn('You better watch yourself');\nproject1.error('Oops! something breaks');\n</code></pre>\n\n<h2 id='simple-section-3'>Custom Events</h2>\n\n<p>Apart from the general log warn error, you can even create custom events to keep track of whats going on.</p>\n\n<pre><code>// Use similar to console object\nproject1.message('Clicked signup', 'module1' ,'click');\nproject1.message('scrolled down', 'module1' ,'scroll');\n</code></pre>\n\n<h2 id='simple-section-4'>Modular Logging</h2>\n\n<p>Lets say you have multiple modules inside a project and want to track each module logs separately</p>\n\n<pre><code>var project1_module1 = project1.get('module1');\nproject1_module1.log('Yay! I can log separately for module1');\n</code></pre>\n\n<p><strong>Note:</strong> Double underscore separates a module from its parent module</p>\n\n<p>You can create as many modules you want.</p>\n\n<pre><code>project1.get('module2').log('This goes to module2');\nproject1.get('module3').log('This goes to module3');;\n</code></pre>\n\n<p>You can even create submodules.</p>\n\n<pre><code>project1_module1.get('submodule1').log(This goes to submodule1));\n</code></pre>\n\n<p>This can theoretically go up to infinite levels.</p>\n","title":"Simple Techniques"});