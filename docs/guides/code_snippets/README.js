Ext.data.JsonP.code_snippets({"guide":"<h1>Code Snippets</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/code_snippets-section-1'>Sync Code Snippet</a></li>\n<li><a href='#!/guide/code_snippets-section-2'>Async Code Snippet</a></li>\n<li><a href='#!/guide/code_snippets-section-3'>Bundling the code</a></li>\n</ol>\n</div>\n\n<p>To use this on your pages, copy the code snippet below, replacing <strong>YOUR_API_KEY</strong> with your api key.</p>\n\n<p>Paste this snippet into your website template page so that it appears after the starting &lt;/head&gt; tag.</p>\n\n<p><strong>NOTE:</strong> The tracking starts only after the javascript code is executed. So it will get maximum data if its loaded as the first javascript.</p>\n\n<p>You can include the code snippets in the following way</p>\n\n<h2 id='code_snippets-section-1'>Sync Code Snippet</h2>\n\n<pre><code>&lt;script type=\"text/javaScript\" src=\"https://cdn.debuggify.net/js/YOUR_API_KEY/debuggify.logger.http.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>This is a simple script tag which loads the javascript from Debuggify CDN servers to the page. As browser executes the website in a single thread. This will block the execution of next script.</p>\n\n<h4>Advantages</h4>\n\n<ul>\n<li><code>Catch maximum exceptions:</code> Due to ordered execution, all the exceptions in code queued after it will be captured.</li>\n<li><code>Capture more accurate data points:</code> As library is already loaded it will able to collect more accurate data points.</li>\n</ul>\n\n\n<h4>Disadvantages</h4>\n\n<p>The only disadvantage of this method is <code>Slight increase in page load time</code></p>\n\n<p>To counter it</p>\n\n<ul>\n<li>Using CDN's to reduce the latency. Our test shows that latency varies from 70-500ms with an average of around 200ms across the globe.</li>\n<li>Enabled cache caching headers for the javascript file so later requested will be fetched from the cache.</li>\n</ul>\n\n\n<h2 id='code_snippets-section-2'>Async Code Snippet</h2>\n\n<pre><code>&lt;script type=\"text/javaScript\"&gt;\n  (function(e,t,r){if(!r.version&amp;&amp;!r.__ai){e.debuggify=r;var n,a,o,s=\"debuggify\",g=Array.prototype.slice,i={};r._e=[];o=e.onerror;e.onerror=function(){r._e&amp;&amp;r._e.push(arguments);return o?o.apply(this,arguments):void 0};r.init=function(e,o,c){function u(e,t,r,n){var a=r.split(\".\");if(2==a.length){e=e[a[0]];r=a[1]}e[r]=function(){var e=n?n+\"#\"+r:r;t.push([e].concat(g.call(arguments,0)))}}function p(e,t,r,n){var a,o=r.split(\" \");for(a=0;o.length&gt;a;a++)u(e,t,o[a],n)}n=t.createElement(\"script\");n.type=\"text/javascript\";n.async=!0;n.src=\"https://cdn.debuggify.net/js/\"+e+\"/debuggify.logger.http.js\";a=t.getElementsByTagName(\"script\")[0];a.parentNode.insertBefore(n,a);var l=r;c!==void 0?l=r[c]=[]:c=s;l.Logger=l.Logger||[];var d=l.Logger;p(l,l,\"Logger.get setEnv addTransport setDefaults onload\",null);var f=function(e){var t=this,r=i[a],n={},a=t&amp;&amp;t.namespace?t.namespace+\"__\"+e:e;if(r!==void 0)return i[a];p(n,d,\"setLevel setFlag get message setNamespace addTransport sendToCollector report track untrack isTracked genericMessage log warn error info\",a);n.name=e;n.get=f;n.namespace=a;i[a]=n;d.push([\"get\"].concat(g.call(arguments,0)));return n};d.get=f};r.__ai=\"0.0.3\"}})(window,document,window.debuggify||[]);debuggify.init(\"YOUR API KEY\");\n&lt;/script&gt;\n</code></pre>\n\n<p>This will dynamically insert a script tag with async mode and provide fake api objects which will work until the script is loaded.</p>\n\n<p>With async mode, browser will download the javascript in a parallel thread and execute it whenever the execution thread is idle.</p>\n\n<h4>Advantages</h4>\n\n<ul>\n<li><code>Doesn't affect page load time</code></li>\n</ul>\n\n\n<h4>Disadvantages</h4>\n\n<ul>\n<li><code>Less exceptions are caught:</code> As the execution time of js depends on the availability of the execution thread which will be definitely be later as compared to the sync method.</li>\n<li><code>Less accurate datapoints:</code> Due to fake apis, the accuracy of data point will be less until the full javascript is loaded.</li>\n</ul>\n\n\n<h2 id='code_snippets-section-3'>Bundling the code</h2>\n\n<p>Save the code from https://cdn.debuggify.net/js/YOUR_API_KEY/debuggify.logger.http.js and ship it along with your side code</p>\n\n<h4>Advantages</h4>\n\n<ul>\n<li><code>Doesn't dependent on debuggify CDN's</code></li>\n</ul>\n\n\n<h4>Disadvantages</h4>\n\n<p>The only disadvantage is to manually update the code for new features and fixes who is a unnecessary pain.</p>\n\n<p><strong>Note</strong> This method is not recommended until you are deploying at close time-intervals and have a automated way of merging the code in to your code base</p>\n","title":"Code Snippets"});