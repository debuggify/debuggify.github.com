Ext.data.JsonP.console({"guide":"<h1>Override Console</h1>\n\n<p>In production, We can easily capture console messages. And not only that, we can manage which type of message we want to capture.</p>\n\n<p>Lets override console in a single line.</p>\n\n<pre><code>window.console = debuggify.Logger.get('console');\n\n// We can console object to report errors\nconsole.info('Yay! I can collect console messages')\nconsole.log('Yay! I can collect console messages');\nconsole.warn('Yay! I can collect console messages');\nconsole.error('Yay! I can collect console messages');\n</code></pre>\n\n<p>This will send all types of messages to the server. But collecting info and log is not important so to limit it to receive only warn and error messages</p>\n\n<pre><code>window.console.setLevel(2);\n</code></pre>\n\n<p>Calling <code>setLevel</code> will only send messages which are greater than and equal to mentioned level.</p>\n\n<p>We can also use selFlag to enable / disable any specific level.</p>\n\n<pre><code>// Disable info messages\nwindow.console.setFlag('info', false);\n\n// Enable info messages\nwindow.console.setFlag('info', false);\n</code></pre>\n","title":"Override Console"});