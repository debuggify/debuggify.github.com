Ext.data.JsonP.frameworks({"guide":"<h1>Debugging Frameworks</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/frameworks-section-1'>jQuery</a></li>\n<li><a href='#!/guide/frameworks-section-2'>Emberjs</a></li>\n<li><a href='#!/guide/frameworks-section-3'>Backbone</a></li>\n</ol>\n</div>\n\n<h2 id='frameworks-section-1'>jQuery</h2>\n\n<h3>Try-Catch Wrapper</h3>\n\n<p>The easy way to start with this is using</p>\n\n<pre><code>// All methods of bar will be wrapped\nproject.track(jQuery);\n</code></pre>\n\n<p>This will installed a try-catch wrapper around all query apis and catch the exceptions.</p>\n\n<h3>Jquery Events</h3>\n\n<p>To track events in jQuery is simple.</p>\n\n<pre><code>project.track(jQuery.event);\n</code></pre>\n\n<p>This will track all the events though apis like <code>.click</code>, <code>.trigger</code> etc</p>\n\n<h3>Jquery Ajax Helper</h3>\n\n<pre><code>// A simple ajax helper to track ajax errors\n$(document).ajaxError(function(event, jqXHR, ajaxSettings, thrownError) {\n\n  project.error(thrownError);\n\n});\n</code></pre>\n\n<h2 id='frameworks-section-2'>Emberjs</h2>\n\n<p>Ember provides a onerror handler which is triggered which framework encounter any errors.</p>\n\n<pre><code>Ember.onerror = function(e) {\n  project.report(e);\n}\n</code></pre>\n\n<h2 id='frameworks-section-3'>Backbone</h2>\n\n<p>Coming Soon</p>\n","title":"Frameworks"});